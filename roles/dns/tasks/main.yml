- name: Configure Network manager to use Dnsmasq
  ansible.builtin.file:
    path: /etc/NetworkManager/conf.d/00-use-dnsmaq.conf
    state: present
    mode: "0644"
    owner: root
    group: root
    content: |
      [main]
      dns=dnsmasq
  become: true

- name: Configure Dnsmasq
  ansible.builtin.file:
    path: /etc/NetworkManager/dnsmasq.d/00-dnsmasq.conf
    state: present
    mode: "0644"
    owner: root
    group: root
    content: |
      # Disable reading /etc/resolv.conf
      no-resolv

      # Make fallback work properly
      strict-order

      # Enable caching (optional)
      cache-size=1000

      # Optional: Enable logging for debugging
      #log-queries
      #log-facility=/var/log/dnsmasq.log
  become: true

- name: Configure default DNS servers
  ansible.builtin.file:
    path: /etc/NetworkManager/dnsmasq.d/00-default.conf
    state: present
    mode: "0644"
    owner: root
    group: root
    content: |
      server=192.168.1.10
      server=127.0.0.53
      server=9.9.9.9
      server=1.1.1.1
  become: true

- name: Configure Dnsmasq to resolve homelab domains
  ansible.builtin.file:
    path: /etc/NetworkManager/dnsmasq.d/02-homelab.conf
    state: present
    mode: "0644"
    owner: root
    group: root
    content: |
      server=/{{ dns_homelab_domain }}/{{ dns_homelab_resolver }}

- name: Configure Dnsmasq to resolve docker domains
  ansible.builtin.file:
    path: /etc/NetworkManager/dnsmasq.d/03-docker.conf
    state: present
    mode: "0644"
    owner: root
    group: root
    content: |
      server=/{{ dns_docker_domain }}/{{ dns_docker_resolver }}

- name: Stop systemd-resolved
  ansible.builtin.systemd:
    name: systemd-resolved
    state: stopped
    enabled: no
  become: true

- name: Remove systemd-resolved symlink of /etc/resolv.conf
  ansible.builtin.file:
    path: /etc/resolv.conf
    state: absent

- name: DNSCrypt Proxy | Get latest release
  community.general.github_release:
    action: latest_release
    user: DNSCrypt
    repo: dnscrypt-proxy
    token: "{{ github_token }}"
  register: release

- name: DNSCrypt Proxy | Download and Install
  ansible.builtin.unarchive:
    dest: "{{ setup_dir }}"
    remote_src: true
    src: https://github.com/DNSCrypt/dnscrypt-proxy/releases/download/{{ release.tag }}/dnscrypt-proxy-linux_x86_64-{{ release.tag }}.tar.gz

- name: Install DNSCrypt Proxy
  ansible.builtin.copy:
    src: "{{ setup_dir }}/linux-x86_64/dnscrypt-proxy"
    dest: "{{ bin_dir }}/dnscrypt-proxy"
    mode: a+x
  become: true

- name: DNSCrypt Proxy | Create configuration file
  ansible.builtin.template:
    src: templates/dnscrypt-proxy.toml.j2
    dest: "{{ ansible_env.HOME }}/.config/dnscrypt-proxy.toml"
    mode: "0644"

- name: DNSCrypt Proxy | Start and enable service
  ansible.builtin.command:
    cmd: dnscrypt-proxy -config ~/.config/dnscrypt-proxy.toml -service install
  become: true

- name: Enable DNSCrypt Proxy service
  ansible.builtin.systemd:
    name: dnscrypt-proxy
    state: started
    enabled: yes
  become: true

- name: Restart NetworkManager
  ansible.builtin.systemd:
    name: NetworkManager
    state: restarted
    enabled: yes
  become: true
